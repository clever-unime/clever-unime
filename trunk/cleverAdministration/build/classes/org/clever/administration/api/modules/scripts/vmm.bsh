
import org.clever.Common.VEInfo.*;


lvms(target) {
        for (vm : getVMM().listVMs_HOST(target, false))
        {
            print(vm);
        }
}



//PER OCCI DA METTERE IN SCRIPT ESTERNO

dvm(target,vm) {
             details = getVMM().getVMDetails_HOST(target, vm);
             net = details.get("network");
             for( i : net)
             {
                 
             
              print("IP: " + i.get("ip"));
         
              print("MAC: " + i.get("mac"));
              print("STATE: " + i.get("state"));
             }
              print("DISPLAY: " + details.get("display"));
              print("MEMORY: " + details.get("memory"));
              print("CORES: " + details.get("cores"));
    }
  


lts(target) {
    templates = getVMM().execSyncCommand(
                                        target,
                                        "HyperVisorAgent",
                                        "listTemplates",
                                        new ArrayList(),
                                        false);
    for(template : templates)
    {
        print(template);
    }
    
}



lits(target) {
     templates = getVMM().execSyncCommand(
                                        target,
                                        "HyperVisorAgent",
                                        "listImageTemplates",
                                        new ArrayList(),
                                        false);
    for(template : templates)
    {
        print(template);
    }
    
} 

las(target) {
     actions = getVMM().execSyncCommand(
                                        target,
                                        "HyperVisorAgent",
                                        "listActions",
                                        new ArrayList(),
                                        false);
    for(action : actions)
    {
        print(action);
    }
    
}



createvm(target, name, template,image)
{
    List<StorageSettings> st = new ArrayList<StorageSettings>();
    st.add(new StorageSettings(0, null, null, "C", image));
    VEDescription ved = new VEDescription( st, null, template, null, null, null);
    getVMM().createVM(target, name, ved, true);
}




 getVMM()
 {
    return sf.getSession().getVMAdministrationModule();
 }
